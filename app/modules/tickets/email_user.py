from flask import jsonify, current_app
from flask_jwt_extended import jwt_required, get_jwt_identity
import requests

# Import database models
from models.db import db
from models.users import Users
from models.tickets import TicketRecords


@jwt_required
def email_user(postQuery):
    # Get the id_user_hash from the jwt_token

    id_user_hash = get_jwt_identity()

    # Get the id_user
    admin = db.session.query(Users).filter(
        Users.id_user_hash == id_user_hash
    ).first()
    # Define return message
    message = {
        "status": 0
    }
    if admin.is_admin == 1:
        title, email = db.session.query(TicketRecords.title, Users.email).join(
            Users,
            TicketRecords.id_creator == Users.id_user
        ).filter(
            TicketRecords.id_ticket_hash == postQuery
        ).first()

        url = "https://ug-api.acnapiv3.io/swivel/email-services/api/mailer"
        subject = "Accenture support has replied to your ticket: " + postQuery
        email = email
        body = "<h2>Your ticket: <b>" + title.upper() + \
            "</b> with ID: <b>" + postQuery + "</b> has recieved a reply.<br>" + \
            "Please check the Accenture support portal at https://user.chocolatepie.tech/</h2>" + \
            "<br><h4><em>This is autogenerated email. Please do not reply to this email.</em></h4>"
        payload = {
            "subject": subject,
            "sender": "support@accenture.com",
            "recipient": email,
            "html": body
        }
        headers = {
            'Server-Token': current_app.config["EMAIL_SERVER_TOKEN"],
            'Content-Type': "application/json",
            'cache-control': "no-cache",
            'Postman-Token': current_app.config["POSTMAN_TOKEN"]
        }

        # send post request to Accenture API
        response = requests.post(url, json=payload, headers=headers)
        if response.status_code == 200:
            message["status"] = 1
            return jsonify(message), 200
        else:
            return jsonify({"message": "Error sending email"}), 500

    return jsonify({"message": "Invalid credential"}), 401
